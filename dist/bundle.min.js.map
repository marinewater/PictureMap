{"version":3,"file":"bundle.min.js","sources":["../src/ts/binary.ts","../src/ts/dom.ts","../src/ts/exif_map.ts","../src/ts/index.ts"],"sourcesContent":["/**\n * creates a Blob from the provided buffer and returns the blob url\n * @param {ArrayBuffer} buffer\n * @returns {string}\n */\nexport function blobFromBuffer( buffer: ArrayBuffer ): string {\n\n    const arrayBufferView = new Uint8Array( buffer );\n    const blob = new Blob( [ arrayBufferView ], { type: 'image/jpeg' } );\n\n    const urlCreator = window.URL || ( window as any ).webkitURL;\n    return urlCreator.createObjectURL( blob );\n\n}\n","import { IPicture } from './exif_map';\n\n/**\n * removes all child nodes from the provided node\n * @param {Node} node\n */\nexport function removeChildren( node: Node ) {\n\n    while ( node.hasChildNodes() ) {\n        node.removeChild( node.lastChild );\n    }\n\n}\n\n/**\n * adds thumbnails to the image grid\n * @param map\n * @param {HTMLDivElement} imageGrid\n * @param {IPicture[]} pictures\n */\nexport function addPictures( map: any, imageGrid: HTMLDivElement, pictures: IPicture[] ) {\n\n    removeChildren( imageGrid );\n\n    pictures.forEach( function( p ) {\n\n        const div = document.createElement( 'div' );\n        div.classList.add( 'image' );\n        div.appendChild( pictureFromBlob( p ) );\n\n        if ( p.Marker !== null ) {\n            div.addEventListener( 'click', function() {\n\n                map.setView( p.Marker.getLatLng(), 13, {\n                    animate: true\n                } );\n\n                p.Marker.openPopup();\n\n            } );\n        }\n        else {\n            div.classList.add( 'no-gps' );\n        }\n\n        imageGrid.appendChild( div );\n\n    } );\n\n}\n\n/**\n * creates an image element which displays the provided Blob\n * @param {IPicture} picture\n * @returns {HTMLImageElement}\n */\nexport function pictureFromBlob( picture: IPicture ): HTMLImageElement {\n\n    const img = document.createElement( 'img' );\n    img.src = picture.BlobUrl;\n    img.alt = picture.Name;\n    img.title = picture.Name;\n\n    return img;\n\n}\n\n/**\n * shows the loading bar that indicates that pictures are being processed\n * @param {boolean} show\n */\nexport function show_loader( show: boolean ) {\n\n    const loader = document.querySelector( '.loader' );\n    if ( show === true ) {\n        loader.classList.remove( 'hidden' );\n    }\n    else {\n        loader.classList.add( 'hidden' );\n    }\n\n}\n\n/**\n * greys out the file input element and blocks access to it\n * enables it if disable = false\n * @param {boolean} [disable=true]\n */\nexport function disableFileInput( disable = true ) {\n\n    const fileInput = document.getElementById( 'image' ) as HTMLInputElement;\n    fileInput.disabled = disable;\n\n}\n\n/**\n * shows modal and displays large image preview and exif data\n * @param {IPicture} picture\n */\nexport function showModal( picture: IPicture ) {\n\n    const modal = document.querySelector( '.modal' ) as HTMLDivElement;\n\n    const modalImageContainer = document.querySelector( '.modal-image-container' ) as HTMLDivElement;\n    removeChildren( modalImageContainer );\n\n    const image = pictureFromBlob( picture );\n    image.classList.add( 'modal-image' );\n    modalImageContainer.appendChild( image );\n\n    const heading = document.querySelector( '.modal-heading h1' ) as HTMLHeadingElement;\n    heading.innerText = picture.Name;\n\n    const modelData = document.querySelector( '.modal-data' ) as HTMLDivElement;\n    removeChildren( modelData );\n    modelData.appendChild( formatExifData( picture ) );\n\n    modal.style.visibility = 'visible';\n\n    const modalClose = document.querySelector( '.modal-close > .close-icon' ) as HTMLDivElement;\n    modalClose.addEventListener( 'click', function( e ) {\n\n        e.preventDefault();\n        hideModal();\n\n    } );\n\n}\n\n/**\n * creates html list for exif data\n * @param {IPicture} picture\n * @returns {HTMLUListElement}\n */\nfunction formatExifData( picture: IPicture ): HTMLUListElement {\n\n    const ul = document.createElement( 'ul' );\n\n    for ( const key in picture.MetaData ) {\n        if ( picture.MetaData.hasOwnProperty( key ) ) {\n\n            const li = document.createElement( 'li' );\n\n            const b = document.createElement( 'b' );\n            const tagName = document.createTextNode( `${key}: ` );\n            b.appendChild( tagName );\n            li.appendChild( b );\n\n            let tagValue: string;\n\n            if ( Array.isArray( picture.MetaData[ key ] ) ) {\n                tagValue = ( picture.MetaData[ key ] as any[] ).join( ', ' );\n            }\n            else if ( typeof picture.MetaData[ key ] === 'object' ) {\n                tagValue = JSON.stringify( picture.MetaData[ key ], null, 4 );\n            }\n            else {\n                tagValue = picture.MetaData[ key ].toString();\n            }\n\n            li.appendChild( document.createTextNode( tagValue ) );\n\n            ul.appendChild( li );\n\n        }\n    }\n\n    return ul;\n}\n\n/**\n * hides the picture/exif data modal\n */\nfunction hideModal() {\n\n    const modal = document.querySelector( '.modal' ) as HTMLDivElement;\n    modal.style.visibility = 'hidden';\n\n}\n","import { ITags } from 'exif-ts/index';\nimport { blobFromBuffer } from './binary';\nimport { addPictures, disableFileInput, pictureFromBlob, show_loader, showModal } from './dom';\nimport { IImageData } from './worker';\n\ninterface ILonLat {\n    Latitude: number;\n    Longitude: number;\n}\n\ninterface IPosition {\n    LonLat: ILonLat;\n    Name: string;\n    BinaryImage: ArrayBuffer;\n    MetaData: ITags;\n}\n\nexport interface IPicture {\n    Name: string;\n    Marker: any;\n    BlobUrl: string;\n    MetaData: ITags;\n}\n\ndeclare const L: any;\n\nexport class ExifMap {\n\n    /**\n     * converts a geo location from degrees, minutes, and seconds to decimal coordinates\n     * @param {number} degrees\n     * @param {number} minutes\n     * @param {number} seconds\n     * @param {string} direction\n     * @returns {number}\n     * @private\n     */\n    private static _convertDMSToDD( degrees: number, minutes: number, seconds: number, direction: string ): number {\n\n        let dd = degrees + minutes / 60 + seconds / ( 60 * 60 );\n\n        if ( direction === 'S' || direction === 'W' ) {\n            dd *= -1;\n        }\n\n        return dd;\n\n    }\n\n    /**\n     * extracts geo data from EXIF tags\n     * @param metaData\n     * @returns {ILonLat | null}\n     * @private\n     */\n    private static _parseGeoData( metaData: any ): ILonLat | null {\n\n        if ( typeof metaData.GPSLatitude === 'undefined' ||\n            typeof metaData.GPSLatitudeRef === 'undefined' ||\n            typeof metaData.GPSLongitude === 'undefined' ||\n            typeof metaData.GPSLongitudeRef === 'undefined'\n        ) {\n            return null;\n        }\n        else {\n            return {\n                Latitude: ExifMap._convertDMSToDD(\n                    parseInt( metaData.GPSLatitude[ 0 ], 10 ),\n                    parseInt( metaData.GPSLatitude[ 1 ], 10 ),\n                    parseFloat( metaData.GPSLatitude[ 2 ] ),\n                    metaData.GPSLatitudeRef\n                ),\n                Longitude: ExifMap._convertDMSToDD(\n                    parseInt( metaData.GPSLongitude[ 0 ], 10 ),\n                    parseInt( metaData.GPSLongitude[ 1 ], 10 ),\n                    parseFloat( metaData.GPSLongitude[ 2 ] ),\n                    metaData.GPSLongitudeRef\n                )\n            };\n        }\n    }\n\n    private readonly _imageInputElement: HTMLInputElement;\n    private readonly _imageGrid: HTMLDivElement;\n    private readonly _map: any;\n    private readonly _pictures: IPicture[] = [];\n\n    /**\n     * @param {HTMLInputElement} inputElement\n     * @param {HTMLDivElement} imageGrid\n     * @param {string} mapId\n     * @constructor\n     */\n    constructor( inputElement: HTMLInputElement, imageGrid: HTMLDivElement, mapId: string ) {\n\n        this._imageInputElement = inputElement;\n        this._imageGrid = imageGrid;\n\n        this._map = L.map( mapId );\n        L.tileLayer( 'http://tile.stamen.com/terrain/{z}/{x}/{y}.jpg', {\n            attribution: 'Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, under ' +\n            '<a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a>. ' +\n            'Data by <a href=\"http://openstreetmap.org\">OpenStreetMap</a>, under ' +\n            '<a href=\"http://www.openstreetmap.org/copyright\">ODbL</a>.',\n            maxZoom: 16\n        } ).addTo( this._map );\n        this._map.setView( [ 51.502654, -0.124225 ], 10 );\n\n    }\n\n    /**\n     * gets images from input file, extracts the exif data and adds them as marker to the map\n     * @returns {Promise<void>}\n     */\n    public getData(): Promise<void> {\n\n        disableFileInput();\n        show_loader( true );\n        const exifData: File[] = [];\n\n        for ( let i = 0; i < this._imageInputElement.files.length; i++ ) {\n            exifData.push( this._imageInputElement.files[ i ] );\n        }\n\n        return this._getImageData( exifData )\n            .then( ( lonLat ) => this._renderMap( lonLat ) )\n            .then( () => this._list_images() )\n            .then( () => show_loader( false ) )\n            .then( () => disableFileInput( false ) );\n\n    }\n\n    /**\n     * zooms and pans the map to make all markers visible\n     */\n    public zoomToAll() {\n\n        const filteredPictures = this._pictures.filter( ( p ) => p.Marker !== null );\n        if ( filteredPictures.length > 0 ) {\n            const markers = filteredPictures.map( ( p ) => p.Marker );\n            const group = new L.featureGroup( markers );\n\n            this._map.fitBounds( group.getBounds() );\n        }\n\n    }\n\n    /**\n     * sends files to a webworker to extract EXIF data\n     * @param {File[]} files\n     * @returns {Promise<IPosition[]>}\n     * @private\n     */\n    private _getImageData( files: File[] ): Promise<IPosition[]> {\n\n        return new Promise( function( resolve, reject ) {\n\n            const worker = new Worker( 'dist/worker.min.js' );\n\n            worker.onmessage = ( e ) => {\n                resolve( e.data.map( function( i: IImageData ) {\n                    return {\n                        BinaryImage: i.binary,\n                        LonLat: ExifMap._parseGeoData( i.meta_data ),\n                        MetaData: i.meta_data,\n                        Name: i.file_name\n                    } as IPosition;\n                } ) );\n                worker.terminate();\n            };\n            worker.onerror = ( error ) => {\n                reject( error );\n                worker.terminate();\n            };\n\n            worker.postMessage( files );\n\n        } );\n\n    }\n\n    /**\n     * displays thumbnail images on the grid\n     * @private\n     */\n    private _list_images() {\n\n        const pictures = this._pictures\n            .sort( ( a, b ) => a.Name.localeCompare( b.Name, undefined, { sensitivity: 'base' } ) );\n\n        addPictures( this._map, this._imageGrid, pictures );\n\n    }\n\n    /**\n     * adds the markers to the map\n     * @param {IPosition[]} positions\n     * @private\n     */\n    private _renderMap( positions: IPosition[] ) {\n\n        const _this = this;\n\n        const markers: any[] = [];\n\n        positions.forEach( function( position ) {\n\n            const picture: IPicture = {\n                BlobUrl: blobFromBuffer( position.BinaryImage ),\n                Marker: null,\n                MetaData: position.MetaData,\n                Name: position.Name\n            };\n\n            if ( position.LonLat !== null ) {\n\n                const div = document.createElement( 'div' );\n\n                const p = document.createElement( 'p' );\n                const text = document.createTextNode( position.Name );\n                p.appendChild( text );\n                div.appendChild( p );\n\n                const image = pictureFromBlob( picture );\n                image.addEventListener( 'click', () => showModal( picture ) );\n                div.appendChild( image );\n\n                const marker = L.marker( [ position.LonLat.Latitude, position.LonLat.Longitude ] ).addTo( _this._map );\n                marker\n                    .bindPopup( div )\n                    .openPopup();\n                markers.push( marker );\n                picture.Marker = marker;\n            }\n\n            _this._pictures.push( picture );\n\n        } );\n\n        if ( markers.length > 0 ) {\n            const group = new L.featureGroup( markers );\n            this._map.fitBounds( group.getBounds() );\n        }\n\n    }\n\n}\n","import { ExifMap } from './exif_map';\n\nfunction main() {\n\n    const image = document.getElementById( 'image' ) as HTMLInputElement;\n    const imageGrid = document.getElementById( 'image-grid' ) as HTMLDivElement;\n    const exifMap = new ExifMap( image, imageGrid, 'map' );\n\n    image.addEventListener( 'change', () => exifMap.getData() );\n    ( document.getElementById( 'fit-all' ) as HTMLButtonElement )\n        .addEventListener( 'click', function( e ) {\n\n        e.preventDefault();\n        exifMap.zoomToAll();\n\n    } );\n\n}\n\nwindow.addEventListener( 'DOMContentLoaded', () => main(), true );\n"],"names":[],"mappings":"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"}